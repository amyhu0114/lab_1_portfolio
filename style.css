/* 
   NOTE: this skeleton will help you go through steps 1-3 (some parts are missing for you to work on them!)
   For a better learning, we recomend you take individual parts of this skeleton step-by-step, so that you can see how 
   each part changes the webpage's style as explained in the course website.
*/



/* 
   :root is used to define global CSS variables (custom properties)
   These variables can be reused throughout the stylesheet to maintain consistency
   For examplem we can use :root to define colors
*/
:root {
    --color-accent: oklch(65% 50% 0); /* Primary accent color in OKLCH format */
    --border-gray: oklch(80% 3% 200); /* Gray for borders */
    /* ADD the rest of the color definitions here if needed! */
    --lighter-gray: oklch(90% 3% 200); 
}

html {
    /* accent-color: var(--color-accent); */
    color-scheme: dark;
  }
  
/* STEP 1: Prevent content from getting too wide */

/* 
    Here we can define the base style for the body element. We already added this in Lab 1, but let's complete it!
*/
body {
    font: 100%/1.5 system-ui; /* 100% font size, 1.5 line height, system font. Same as in lab 1 */
    max-width: 50rem; /* Limits width to 50 rems for better readability */
    margin-inline: auto; /* Add here margin-inline */
    padding: 1rem; /* Add here padding around the body */
}


/* STEP 2: Styling the navigation bar */

/* 
   Step 2.1: Getting <ul> and <li> out of the way
   "display: contents" removes default styling while keeping semantic structure 
   (you do not need to make any changes here for step 2.1, but please take note of it!)
*/
nav ul, 
nav li {
    display: contents;
}

/* Step 2.2: Apply Flexbox to the navigation */
nav {
    --border-color: oklch(50% 10% 200 / 40%);
    display: flex; /* Turns nav into a flex container */

    /* You will need to continue writing here for step 2.3 */
    justify-content: space-around; /* Evenly distribute items */
    align-items: center; /* Center items vertically */
    gap: 1rem; /* Space between items */
    margin-bottom: 1rem; /* Separate nav from content */
    border-bottom: 1px solid; /* Cool gray bottom border */
    border-bottom-color: var(--border-color);
}

/* Step 2.3: Style navigation links for each element <a> */
nav a {
    flex: 1; /* step 2.2 for each element to take the same space  */
    text-decoration: none; /* Remove the underline from the links by setting */
    color: inherit; /* Add here color */
    text-align: center; /* Add here text-align */
    padding: 0.5em; /* Add here padding */
    /* margin-bottom: 1rem; Add here margin-bottom */
    border-bottom: 0.4em solid transparent;
    /* border-bottom-color: var(--border-color); */
}
    /* NOTE: please make sure that in each index.html page you add class="current" to the current page*/
        /* For example:  <a href="index.html" class="current">Home</a> */ 

        nav a.current {
            border-bottom: 0.4em solid var(--lighter-gray);
            padding-bottom: 0.5em 
    /* Add here what your current page should look like at the navigation bar (highlight)*/
}

/* Before jumping to the next step, remember to complete wtep 2.3 by editing 'nav' */

/* 
   Step 2.4: Accent color and hover styles
*/
nav a:hover {
    border-bottom: 0.4em solid var(--color-accent); /* Add here hover effects */
}


/*  STEP 3: Contact form layout */

/* Step 3.1: Integrate typography */
    /* (you do not need to make any changes here for step 2.1, but please take note of it!) */
select,
input,
textarea,
button {
    font: inherit; /* Ensures form elements use the same font as the body */
}

/* Step 3.2: Top-down layout */

label, input, textarea, button { /* We define the elements in which we want this to take effect */
    display: block;
    width: 100%; /* add width here*/
    box-sizing: border-box; /* add box-sizing here */
}
label { /* We'll add the spacing between labels here */
    margin-block: 0.5rem;
}

/* Step 3.2: Grid layout */
 
    /* 
        Please work on grid layout here.
        NOTE: this will override what you did in the previous step! remember *Specificity*
    */

form {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 1em;
}

label {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
}
  
input,
textarea,
button {
    width: 100%;
    box-sizing: border-box;
}
  
button {
    grid-column: 1 / -1;
}



img {
    max-width: 100%;
}


/* STEP 4: Style your projects page */
.projects {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
    gap: 1em;
}

.projects article {
    display: grid;
    grid-template-rows: subgrid;
    grid-row: span 3;
}

.projects h2 {
    margin: 0;
}

h1 {
    font-size: 400%;
}

h1, h2, h3, h4, h5, h6 {
    line-height: 1.1; /* Reduce line height */
    text-wrap: balance; /* Prevent uneven line breaks */
}


/* STEP 5: Style your CV */

    /* HINT: one thing you could do here is define an ID selector in your resume/index.html -> <section id="resume"> 
             and then you can generate a layour just for your resume
             For example:
    */
    #resume { /* Use this # as your ID selector */ 
        max-width: 50rem;
        margin: 2rem auto;
        padding: 2rem;
        background: color-mix(in oklch, var(--lighter-gray), canvas 85%);
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        /* ... */ 
    }

    #resume h2 {
        text-align: center;
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    #resume h3 {
        font-size: 1.5rem;
        margin-top: 1.5rem;
        border-bottom: 2px solid var(--border-gray);
        padding-bottom: 0.5rem;
    }

    #resume h4 {
        font-size: 1.2rem;
        color: var(--color-accent);
        margin-bottom: 0.3rem;
    }


    #resume article {
        /* background: white; */
        background-color: color-mix(in oklch, var(--lighter-gray), canvas 85%);
        padding: 1.5rem;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    
    #resume section article {
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--border-gray);
    }

.color-scheme {
  position: absolute;
  top: 1rem;
  right: -85%;
  font-size: 80%; /*1rem;*/
  display: inline-flex;
  gap: 4px;
}
    